---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: logging-fluentd
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: logging-fluentd
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: logging-fluentd
  namespace: default
roleRef:
  kind: ClusterRole
  name: logging-fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: logging-fluentd
  namespace: default
---



apiVersion: v1
items:
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    labels:
      app: logging-fluentd
    name: logging-fluentd
  spec:
    selector:
      matchLabels:
        logging: logging-fluentd
    template:
      metadata:
        labels:
          logging: logging-fluentd
        name: logging-fluentd
      spec:
        containers:
        - name: fluentd
          env:
          - name: K8S_HOST_URL
            value: https://kubernetes.default.svc.cluster.local
          - name: USE_JOURNAL
            value: "false"
          - name: MONGODB_HOSTNAME
            value: logging-fluentd-mongodb
          - name: MONGODB_PORT
            value: "27017"
          - name: MONGODB_DATABASE
            value: logging
          - name: MONGODB_COLLECTION
            value: logs
          - name: MONGODB_USERNAME
            value: userPSU
          - name: MONGODB_PASSWORD
            value: maoFn3LAfvxxSnVf
          image: caruccio/logging-fluentd:latest
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /run/log/journal
            name: runlogjournal
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /etc/docker-hostname
            name: dockerhostname
            readOnly: true
          - mountPath: /etc/localtime
            name: localtime
            readOnly: true
          - mountPath: /etc/sysconfig/docker
            name: dockercfg
            readOnly: true
        - name: fluentd-elastic
          image: fluent/fluentd-kubernetes-daemonset:v1.9.2-debian-elasticsearch7-1.0
          env:
            - name:  FLUENT_ELASTICSEARCH_HOST
              value: "elasticsearch-master.dapr-monitoring"
            - name:  FLUENT_ELASTICSEARCH_PORT
              value: "9200"
            - name: FLUENT_ELASTICSEARCH_SCHEME
              value: "http"
            - name: FLUENT_UID
              value: "0"
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
          - name: varlog
            mountPath: /var/log
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
            readOnly: true
          - name: fluentd-config
            mountPath: /fluentd/etc        
        #nodeSelector:
        #  role: "worker"
        serviceAccount: logging-fluentd
        serviceAccountName: logging-fluentd
        terminationGracePeriodSeconds: 30
        restartPolicy: Always
        dnsPolicy: ClusterFirst
        volumes:
        - hostPath:
            path: /run/log/journal
          name: runlogjournal
        - hostPath:
            path: /var/log
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
          name: varlibdockercontainers
        - hostPath:
            path: /etc/hostname
          name: dockerhostname
        - hostPath:
            path: /etc/localtime
          name: localtime
        - hostPath:
            path: /etc/sysconfig/docker
          name: dockercfg
        - name: fluentd-config
          configMap:
            name: fluentd-config
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: logging-fluentd
    name: logging-fluentd-mongodb
  spec:
    ports:
    - name: mongo
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      app: logging-fluentd
      name: logging-fluentd-mongodb
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: logging-fluentd
    name: logging-fluentd-mongodb-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Gi

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      iconClass: icon-mongodb
      tags: database,mongodb
    labels:
      app: logging-fluentd
      name: logging-fluentd-mongodb
    name: logging-fluentd-mongodb
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: logging-fluentd
        name: logging-fluentd-mongodb
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: logging-fluentd
          name: logging-fluentd-mongodb
      spec:
        containers:
        - name: mongodb
          env:
          - name: MONGODB_USER
            value: userPSU
          - name: MONGODB_PASSWORD
            value: maoFn3LAfvxxSnVf
          - name: MONGODB_DATABASE
            value: logging
          - name: MONGODB_ADMIN_PASSWORD
            value: hvBPfm8LOV3kwsOp
          image: centos/mongodb-32-centos7:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 300m
              memory: 1Gi
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            initialDelaySeconds: 5
            timeoutSeconds: 2
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: logging-fluentd-mongodb-data
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - name: logging-fluentd-mongodb-data
          persistentVolumeClaim:
            claimName: logging-fluentd-mongodb-data
kind: List
metadata: {}
